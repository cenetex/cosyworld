"use strict";(self.webpackChunkcosyworld=self.webpackChunkcosyworld||[]).push([[283],{283:(t,e,n)=>{n.r(e),n.d(e,{loadContent:()=>i,showTribeDetailsContent:()=>s});var r=n(903);async function i(){const t=document.getElementById("content");if(t)try{t.innerHTML='\n      <div class="max-w-7xl mx-auto px-4">\n        <h1 class="text-3xl font-bold mb-6">Tribes</h1>\n        <div class="bg-gray-800/50 p-6 rounded-lg mb-8">\n          <p class="text-lg">Tribes are groups of avatars that share the same emoji identifier. Each tribe has its own characteristics and traits.</p>\n        </div>\n        \n        <div id="tribes-loader" class="flex justify-center py-12">\n          <div class="animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-primary-600"></div>\n        </div>\n        \n        <div id="tribes-content" class="hidden">\n          <div id="tribes-grid" class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-4"></div>\n        </div>\n        \n        <div id="tribe-details" class="hidden mt-8">\n          <button \n            id="back-to-tribes" \n            class="flex items-center gap-2 bg-gray-800 hover:bg-gray-700 px-4 py-2 rounded mb-6 transition-colors"\n          >\n            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">\n              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 19l-7-7m0 0l7-7m-7 7h18" />\n            </svg>\n            Back to tribes\n          </button>\n          \n          <div class="flex items-center gap-4 mb-6">\n            <div id="tribe-emoji" class="text-5xl"></div>\n            <h2 class="text-3xl font-bold">Tribe <span id="tribe-name"></span></h2>\n          </div>\n          \n          <div id="tribe-members" class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-4"></div>\n        </div>\n      </div>\n    ';const n=await r.im.getCounts(),i=document.getElementById("tribes-loader"),o=document.getElementById("tribes-content"),a=document.getElementById("tribes-grid"),d=document.getElementById("tribe-details");if(!n||0===n.length)return void(i.innerHTML='<div class="text-center text-gray-400">No tribes found</div>');e=n,a.innerHTML=e.map((t=>`\n    <div \n      class="tribe-card bg-gray-800 rounded-lg p-5 flex flex-col items-center hover:bg-gray-700 transition-colors cursor-pointer"\n      data-emoji="${t.emoji}" \n      onclick="showTribeDetailsContent('${t.emoji}')"\n    >\n      <div class="text-5xl mb-3">${t.emoji}</div>\n      <div class="text-xl font-bold">Tribe ${t.emoji}</div>\n      <div class="text-gray-400 mt-2">\n        ${t.count} ${1===t.count?"member":"members"}\n      </div>\n    </div>\n  `)).join(""),i.classList.add("hidden"),o.classList.remove("hidden"),document.getElementById("back-to-tribes").addEventListener("click",(()=>{o.classList.remove("hidden"),d.classList.add("hidden")})),window.showTribeDetailsContent=s}catch(e){console.error("Load Tribes error:",e),t.innerHTML=`\n      <div class="text-center py-12 text-red-500">\n        Failed to load tribes: ${e.message}\n        <button \n          class="block mx-auto mt-4 px-4 py-2 bg-gray-700 rounded"\n          onclick="loadContent()"\n        >\n          Retry\n        </button>\n      </div>\n    `}var e}async function s(t){try{const e=document.getElementById("tribes-content"),n=document.getElementById("tribe-details"),i=document.getElementById("tribe-emoji"),s=document.getElementById("tribe-name"),a=document.getElementById("tribe-members");let d=null;const c=24;async function l(){const e=new URLSearchParams({limit:String(c),thumbs:"0"});d&&e.set("after",d);const n=await r.im.getTribeByEmoji(t+`?${e.toString()}`);return d=n?.nextCursor||null,n?.members||[]}e.classList.add("hidden"),n.classList.remove("hidden"),i.textContent=t,s.textContent=t,a.innerHTML='\n      <div class="col-span-full flex justify-center py-8">\n        <div class="animate-spin rounded-full h-8 w-8 border-t-2 border-b-2 border-primary-600"></div>\n      </div>\n    ';const m=await l();if(!m||0===m.length)return void(a.innerHTML='\n        <div class="col-span-full text-center text-gray-400 py-8">\n          No members found for this tribe\n        </div>\n      ');a.innerHTML="",o(a,m,t);const g=document.createElement("button");g.className="col-span-full mt-4 px-4 py-2 bg-gray-800 hover:bg-gray-700 rounded",g.textContent="Load more",g.addEventListener("click",(async()=>{g.disabled=!0,g.textContent="Loading...";try{const e=await l();e.length?(o(a,e,t),d?(g.textContent="Load more",g.disabled=!1):g.textContent="No more members"):g.textContent="No more members"}catch(t){console.error(t),g.textContent="Load more",g.disabled=!1}})),a.appendChild(g);const u=document.createElement("div");u.className="col-span-full h-6",a.appendChild(u),new IntersectionObserver((async t=>{t[0].isIntersecting&&!g.disabled&&g.click()}),{rootMargin:"200px"}).observe(u)}catch(b){console.error("Show Tribe Details error:",b),document.getElementById("tribe-members").innerHTML=`\n      <div class="col-span-full text-center text-red-500 py-8">\n        Failed to load tribe members: ${b.message}\n        <button \n          class="block mx-auto mt-4 px-4 py-2 bg-gray-700 rounded"\n          onclick="showTribeDetailsContent('${t}')"\n        >\n          Retry\n        </button>\n      </div>\n    `}}function o(t,e,n){t.innerHTML=e.map((t=>{const e=t.name||"Unknown",r=e.charAt(0).toUpperCase();return`\n      <div \n        class="bg-gray-800 p-3 rounded-lg hover:bg-gray-700 transition-colors cursor-pointer"\n        onclick="showAvatarDetails('${t._id}')"\n      >\n        <div class="flex items-center gap-3">\n          ${t.imageUrl?`<img \n                  src="${t.imageUrl}" \n                  alt="${e}" \n                  class="w-16 h-16 object-cover rounded-full"\n                  onerror="this.onerror=null; this.src='data:image/svg+xml,%3Csvg xmlns=\\'http://www.w3.org/2000/svg\\' width=\\'100\\' height=\\'100\\' viewBox=\\'0 0 100 100\\'%3E%3Crect fill=\\'%23333\\' width=\\'100\\' height=\\'100\\'/%3E%3Ctext fill=\\'%23FFF\\' x=\\'50\\' y=\\'50\\' font-size=\\'50\\' text-anchor=\\'middle\\' dominant-baseline=\\'middle\\'%3E${r}%3C/text%3E%3C/svg%3E';">`:`<div class="w-16 h-16 rounded-full bg-gray-700 flex items-center justify-center text-2xl font-bold text-white">\n                  ${r}\n              </div>`}\n        \n          <div class="flex-1 min-w-0">\n            <h3 class="text-lg font-semibold truncate">${e}</h3>\n            <div class="text-xs text-gray-400 mt-1">\n              ${t.messageCount||0} messages\n            </div>\n          </div>\n        \n          <div class="text-xl">${n}</div>\n        </div>\n      </div>\n    `})).join("")}n(522)},903:(t,e,n)=>{n.d(e,{D2:()=>o,MD:()=>s,YJ:()=>a,c3:()=>g,cy:()=>m,h5:()=>l,im:()=>d,y1:()=>c});var r=n(409);async function i(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};try{const n=await fetch(t,e);if(!n.ok){const t=await n.json().catch((()=>null)),e=t?.message||`HTTP error: ${n.status}`;throw new Error(e)}return n.json()}catch(e){throw console.error(`API Error (${t}):`,e),e}}n(522);const s={getAvatars:async function(){const t=new URLSearchParams(arguments.length>0&&void 0!==arguments[0]?arguments[0]:{}).toString();return i(`${r.Hr.AVATARS}?${t}`)},getAvatarById:t=>i(`${r.Hr.AVATARS}/${t}`),getNarratives:t=>i(`${r.Hr.AVATARS}/${t}/narratives`),getActions:t=>i(`${r.Hr.AVATARS}/${t}/dungeon-actions`),getStats:t=>i(`${r.Hr.AVATARS}/${t}/stats`)},o={getStatus:t=>i(`${r.Hr.XAUTH}/status/${t}`),initiateAuth:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return i(`${r.Hr.XAUTH}/initiate/${t}`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(e)})},disconnect:t=>i(`${r.Hr.XAUTH}/disconnect/${t}`,{method:"POST"})},a={getStatus:t=>i(`${r.Hr.CLAIMS}/status/${t}`),claimAvatar:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return i(`${r.Hr.CLAIMS}/claim/${t}`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(e)})}},d={getCounts:()=>i(`${r.Hr.TRIBES}/counts`),getTribeByEmoji:t=>(t.includes("?"),i(`${r.Hr.TRIBES}/${t}`))},c={list:function(){const t=new URLSearchParams(arguments.length>0&&void 0!==arguments[0]?arguments[0]:{}).toString();return i(`${r.Hr.COLLECTIONS}?${t}`)},members:function(t){const e=new URLSearchParams(arguments.length>1&&void 0!==arguments[1]?arguments[1]:{}).toString();return i(`${r.Hr.COLLECTIONS}/${encodeURIComponent(t)}?${e}`)}},l={getActionLog:function(){const t=new URLSearchParams(arguments.length>0&&void 0!==arguments[0]?arguments[0]:{}).toString();return i(`${r.Hr.DUNGEON}/log?${t}`)}},m={getPosts:function(){const t=new URLSearchParams(arguments.length>0&&void 0!==arguments[0]?arguments[0]:{}).toString();return i(`${r.Hr.SOCIAL}/posts?${t}`)}},g={getLeaderboard:function(){const t=new URLSearchParams(arguments.length>0&&void 0!==arguments[0]?arguments[0]:{}).toString();return i(`${r.Hr.LEADERBOARD}?${t}`)}}}}]);