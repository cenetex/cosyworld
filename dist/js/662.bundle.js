(self.webpackChunkcosyworld=self.webpackChunkcosyworld||[]).push([[662],{662:(t,e,n)=>{n.r(e),n.d(e,{loadContent:()=>s});var a=n(318),r=n(903),i=n(522),o=n(350);async function s(){const t=document.getElementById("content");if(t)if(a.wk.wallet&&a.wk.wallet.publicKey)try{const e=await r.MD.getAvatars({walletAddress:a.wk.wallet.publicKey,view:"claims",page:1,limit:12});if(!e.avatars||0===e.avatars.length)return void(t.innerHTML='\n    <div class="max-w-4xl mx-auto px-4">\n      <div class="text-center py-12">\n        <h2 class="text-2xl font-bold mb-4">No Squad Members Found</h2>\n        <p class="text-gray-400 mb-6">\n          You haven\'t claimed any avatars yet. Explore the leaderboard to find avatars to claim!\n        </p>\n        <button \n          onclick="setActiveTab(\'leaderboard\')" \n          class="px-4 py-2 bg-primary-600 hover:bg-primary-700 text-white rounded transition"\n        >\n          Browse Leaderboard\n        </button>\n      </div>\n    </div>\n  ');!function(t,e){const n=window.AvatarDetails?.renderAvatarCard||l;t.innerHTML=`\n    <div class="max-w-7xl mx-auto px-4">\n      <div class="text-center py-4">\n        <h2 class="text-xl font-bold">Wallet: ${(0,o.Wr)(a.wk.wallet.publicKey)}</h2>\n      </div>\n      <div class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-4">\n        ${e.map((t=>`\n          <div class="cursor-pointer relative group">\n            ${n(t,null,t.isClaimed,t.claimedBy)}\n            ${"unminted"===t.mintStatus?'<div class="absolute top-2 right-2 px-2 py-1 bg-yellow-600 text-white text-xs rounded-full">Unminted</div>':""}\n            ${t.isClaimed?"unminted"===t.mintStatus?`<button class="absolute bottom-4 left-4 right-4 px-3 py-2 bg-green-600 hover:bg-green-700 text-white text-sm rounded transition opacity-90 group-hover:opacity-100" onclick="event.stopPropagation(); mintClaim('${t.claimId}')">Mint NFT</button>`:'<div class="absolute bottom-4 left-4 right-4 px-3 py-2 bg-gray-700 text-white text-xs rounded text-center opacity-90 group-hover:opacity-100">Minted</div>':`<button class="absolute bottom-4 left-4 right-4 px-3 py-2 bg-primary-600 hover:bg-primary-700 text-white text-sm rounded transition opacity-90 group-hover:opacity-100" onclick="event.stopPropagation(); claimAvatar('${t._id}')">Claim</button>`}\n          </div>\n        `)).join("")}\n      </div>\n    </div>\n  `}(t,await Promise.all(e.avatars.map((async t=>{try{const e=await r.YJ.getStatus(t._id);return{...t,mintStatus:e.claimed&&!e.minted?"unminted":"minted",isClaimed:e.claimed,claimedBy:e.claimedBy||"",claimId:e._id}}catch(e){return console.warn(`Failed to get claim status for avatar ${t._id}:`,e),{...t,mintStatus:"unknown",isClaimed:!1,claimedBy:""}}}))))}catch(e){console.error("Load Squad error:",e),t.innerHTML=`\n      <div class="text-center py-12 text-red-500">\n        Failed to load Squad: ${e.message}\n        <button class="mt-4 px-4 py-2 bg-primary-600 rounded" onclick="loadContent()">\n          Retry\n        </button>\n      </div>\n    `}else t.innerHTML='\n    <div class="text-center py-12">\n      <p class="mb-4">Connect your wallet to view your Squad</p>\n      <button class="px-4 py-2 bg-primary-600 hover:bg-primary-700 rounded text-white transition" onclick="connectWallet()">\n        Connect Wallet\n      </button>\n    </div>\n  '}function l(t,e,n,a){return`\n    <div class="bg-gray-800 rounded-lg overflow-hidden hover:bg-gray-750 transition-colors ${n?"border-l-2 border-green-500":""}">\n      <div class="aspect-w-1 aspect-h-1 relative">\n        <img \n          src="${t.thumbnailUrl||t.imageUrl}" \n          alt="${t.name}" \n          class="object-cover w-full h-full"\n          onerror="this.src='data:image/svg+xml,%3Csvg xmlns=\\'http://www.w3.org/2000/svg\\' width=\\'100\\' height=\\'100\\' viewBox=\\'0 0 100 100\\'%3E%3Crect fill=\\'%23333\\' width=\\'100\\' height=\\'100\\'/%3E%3Ctext fill=\\'%23FFF\\' x=\\'50\\' y=\\'50\\' font-size=\\'50\\' text-anchor=\\'middle\\' dominant-baseline=\\'middle\\'%3E${t.name.charAt(0).toUpperCase()}%3C/text%3E%3C/svg%3E';"\n        >\n      </div>\n      <div class="p-4">\n        <h3 class="font-bold text-lg truncate">${t.name}</h3>\n        <p class="text-sm text-gray-400 mt-1 truncate">${t.description||""}</p>\n      </div>\n    </div>\n  `}window.claimAvatar=async function(t){try{(0,i.P)("Claiming avatar...");const e=await fetch(`/api/claims/claim/${t}`,{method:"POST"}),n=await e.json();if(!n.success)throw new Error(n.error||"Claim failed");(0,i.P)("Avatar claimed!",{type:"success"}),s()}catch(t){(0,i.P)(`Claim failed: ${t.message}`,{type:"error"})}}},903:(t,e,n)=>{n.d(e,{D2:()=>o,MD:()=>i,YJ:()=>s,c3:()=>m,cy:()=>d,h5:()=>c,im:()=>l});var a=n(409);async function r(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};try{const n=await fetch(t,e);if(!n.ok){const t=await n.json().catch((()=>null)),e=t?.message||`HTTP error: ${n.status}`;throw new Error(e)}return n.json()}catch(e){throw console.error(`API Error (${t}):`,e),e}}n(522);const i={getAvatars:async function(){const t=new URLSearchParams(arguments.length>0&&void 0!==arguments[0]?arguments[0]:{}).toString();return r(`${a.Hr.AVATARS}?${t}`)},getAvatarById:t=>r(`${a.Hr.AVATARS}/${t}`),getNarratives:t=>r(`${a.Hr.AVATARS}/${t}/narratives`),getActions:t=>r(`${a.Hr.AVATARS}/${t}/dungeon-actions`),getStats:t=>r(`${a.Hr.AVATARS}/${t}/stats`)},o={getStatus:t=>r(`${a.Hr.XAUTH}/status/${t}`),initiateAuth:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return r(`${a.Hr.XAUTH}/initiate/${t}`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(e)})},disconnect:t=>r(`${a.Hr.XAUTH}/disconnect/${t}`,{method:"POST"})},s={getStatus:t=>r(`${a.Hr.CLAIMS}/status/${t}`),claimAvatar:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return r(`${a.Hr.CLAIMS}/claim/${t}`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(e)})}},l={getCounts:()=>r(`${a.Hr.TRIBES}/counts`),getTribeByEmoji:t=>r(`${a.Hr.TRIBES}/${t}`)},c={getActionLog:function(){const t=new URLSearchParams(arguments.length>0&&void 0!==arguments[0]?arguments[0]:{}).toString();return r(`${a.Hr.DUNGEON}/log?${t}`)}},d={getPosts:function(){const t=new URLSearchParams(arguments.length>0&&void 0!==arguments[0]?arguments[0]:{}).toString();return r(`${a.Hr.SOCIAL}/posts?${t}`)}},m={getLeaderboard:function(){const t=new URLSearchParams(arguments.length>0&&void 0!==arguments[0]?arguments[0]:{}).toString();return r(`${a.Hr.LEADERBOARD}?${t}`)}}}}]);